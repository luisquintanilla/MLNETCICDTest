# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: 'TrainEvaluate'
    steps: 
    - task: DotNetCoreCLI@2
      displayName: 'Restore Training project'
      inputs:
        command: 'restore'
        projects: 'TrainConsole/TrainConsole.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build training project'
      inputs:
        command: 'build'
        projects: 'TrainConsole/TrainConsole.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Train model'
      inputs:
        command: 'run'
        arguments: '$(training-data-uri)'
        workingDirectory: 'TrainConsole'
    - task: DotNetCoreCLI@2
      displayName: 'Evaluate Model'
      inputs:
        command: 'test'
        projects: 'TestModel'
        testRunTitle: 'Evaluate Model'
        workingDirectory: 'TestModel'
    - task: CmdLine@2
      displayName: 'Upload Model to Azure Blob Storage Validation Container'
      condition: succeeded()
      inputs:
        workingDirectory: TrainConsole
        script: |
          curl --location --request POST $MAPPED_AZFN_MODEL_UPLOAD_VALIDATION_SERVICE \
            --header 'Transfer-Encoding: chunked' \
            --header 'Content-Type: application/x-www-form-urlencoded' \
            --form '=@model.zip'
      env:
        MAPPED_AZFN_MODEL_UPLOAD_VALIDATION_SERVICE: $(az-fn-model-upload-validation-service)        

  - job: 'UploadProductionModel'
    dependsOn: 'TrainEvaluate'
    condition: succeeded('TrainEvaluate')
    steps:
    - task: CmdLine@2
      displayName: 'Download validated model'
      inputs:
        workingDirectory: TrainConsole
        script: 'curl $VALIDATED_MODEL_URI > model.zip'
      env:
        VALIDATED_MODEL_URI: $(validated-model-uri)
    - task: CmdLine@2
      displayName: 'Upload Model to Azure Blob Storage Production Container'
      inputs:
        workingDirectory: TrainConsole
        script: |
          
          curl --location --request POST $MAPPED_AZFN_MODEL_UPLOAD_SERVICE \
            --header 'Transfer-Encoding: chunked' \
            --header 'Content-Type: application/x-www-form-urlencoded' \
            --form '=@model.zip'
      env:
        MAPPED_AZFN_MODEL_UPLOAD_SERVICE: $(az-fn-model-upload-service)

# steps:

# - task: DotNetCoreCLI@2
#   displayName: 'Restore Training project'
#   inputs:
#     command: 'restore'
#     projects: 'TrainConsole/TrainConsole.csproj'
#     feedsToUse: 'select'

# - task: DotNetCoreCLI@2
#   displayName: 'Build training project'
#   inputs:
#     command: 'build'
#     projects: 'TrainConsole/TrainConsole.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Train model'
#   inputs:
#     workingDirectory: 'TrainConsole'
#     command: 'run'

# - task: CmdLine@2
#   displayName: 'Upload Model to Azure Blob Storage'
#   inputs:
#     workingDirectory: TrainConsole
#     script: |
#       curl --location --request POST $MAPPED_AZFN_MODEL_UPLOAD_SERVICE \
#         --header 'Transfer-Encoding: chunked' \
#         --header 'Content-Type: application/x-www-form-urlencoded' \
#         --form '=@model.zip'
#   env:
#     MAPPED_AZFN_MODEL_UPLOAD_SERVICE: $(az-fn-model-upload-service)

# - task: DotNetCoreCLI@2
#   displayName: 'Evaluate Model'
#   inputs:
#     command: 'test'
#     projects: 'TestModel'
#     testRunTitle: 'Evaluate Model'
#     workingDirectory: 'TestModel'